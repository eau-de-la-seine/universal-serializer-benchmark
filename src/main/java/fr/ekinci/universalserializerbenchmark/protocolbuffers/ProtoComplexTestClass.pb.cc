// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoComplexTestClass.proto

#include "ProtoComplexTestClass.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tutorial {
class ComplexTestClassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ComplexTestClass>
      _instance;
} _ComplexTestClass_default_instance_;
}  // namespace tutorial
namespace protobuf_ProtoComplexTestClass_2eproto {
void InitDefaultsComplexTestClassImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tutorial::_ComplexTestClass_default_instance_;
    new (ptr) ::tutorial::ComplexTestClass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tutorial::ComplexTestClass::InitAsDefaultInstance();
}

void InitDefaultsComplexTestClass() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComplexTestClassImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr9_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr10_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr11_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr12_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tutorial::ComplexTestClass, attr13_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tutorial::ComplexTestClass)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tutorial::_ComplexTestClass_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ProtoComplexTestClass.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033ProtoComplexTestClass.proto\022\010tutorial\""
      "\221\002\n\020ComplexTestClass\022\r\n\005attr1\030\001 \001(\014\022\r\n\005a"
      "ttr2\030\002 \001(\005\022\r\n\005attr3\030\003 \001(\005\022\r\n\005attr4\030\004 \001(\003"
      "\022\r\n\005attr5\030\005 \001(\002\022\r\n\005attr6\030\006 \001(\001\022\r\n\005attr7\030"
      "\007 \001(\010\022\r\n\005attr8\030\010 \001(\t\022\r\n\005attr9\030\t \001(\t\022\016\n\006a"
      "ttr10\030\n \003(\001\022\016\n\006attr11\030\013 \003(\t\022*\n\006attr12\030\014 "
      "\001(\0132\032.tutorial.ComplexTestClass\022*\n\006attr1"
      "3\030\r \003(\0132\032.tutorial.ComplexTestClassBB\n6f"
      "r.ekinci.universalserializerbenchmark.pr"
      "otocolbuffersB\010Protobufb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 391);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoComplexTestClass.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtoComplexTestClass_2eproto
namespace tutorial {

// ===================================================================

void ComplexTestClass::InitAsDefaultInstance() {
  ::tutorial::_ComplexTestClass_default_instance_._instance.get_mutable()->attr12_ = const_cast< ::tutorial::ComplexTestClass*>(
      ::tutorial::ComplexTestClass::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComplexTestClass::kAttr1FieldNumber;
const int ComplexTestClass::kAttr2FieldNumber;
const int ComplexTestClass::kAttr3FieldNumber;
const int ComplexTestClass::kAttr4FieldNumber;
const int ComplexTestClass::kAttr5FieldNumber;
const int ComplexTestClass::kAttr6FieldNumber;
const int ComplexTestClass::kAttr7FieldNumber;
const int ComplexTestClass::kAttr8FieldNumber;
const int ComplexTestClass::kAttr9FieldNumber;
const int ComplexTestClass::kAttr10FieldNumber;
const int ComplexTestClass::kAttr11FieldNumber;
const int ComplexTestClass::kAttr12FieldNumber;
const int ComplexTestClass::kAttr13FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComplexTestClass::ComplexTestClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoComplexTestClass_2eproto::InitDefaultsComplexTestClass();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tutorial.ComplexTestClass)
}
ComplexTestClass::ComplexTestClass(const ComplexTestClass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attr10_(from.attr10_),
      attr11_(from.attr11_),
      attr13_(from.attr13_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attr1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attr1().size() > 0) {
    attr1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr1_);
  }
  attr8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attr8().size() > 0) {
    attr8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr8_);
  }
  attr9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attr9().size() > 0) {
    attr9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr9_);
  }
  if (from.has_attr12()) {
    attr12_ = new ::tutorial::ComplexTestClass(*from.attr12_);
  } else {
    attr12_ = NULL;
  }
  ::memcpy(&attr2_, &from.attr2_,
    static_cast<size_t>(reinterpret_cast<char*>(&attr7_) -
    reinterpret_cast<char*>(&attr2_)) + sizeof(attr7_));
  // @@protoc_insertion_point(copy_constructor:tutorial.ComplexTestClass)
}

void ComplexTestClass::SharedCtor() {
  attr1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attr12_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr7_) -
      reinterpret_cast<char*>(&attr12_)) + sizeof(attr7_));
  _cached_size_ = 0;
}

ComplexTestClass::~ComplexTestClass() {
  // @@protoc_insertion_point(destructor:tutorial.ComplexTestClass)
  SharedDtor();
}

void ComplexTestClass::SharedDtor() {
  attr1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr8_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr9_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete attr12_;
}

void ComplexTestClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComplexTestClass::descriptor() {
  ::protobuf_ProtoComplexTestClass_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoComplexTestClass_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComplexTestClass& ComplexTestClass::default_instance() {
  ::protobuf_ProtoComplexTestClass_2eproto::InitDefaultsComplexTestClass();
  return *internal_default_instance();
}

ComplexTestClass* ComplexTestClass::New(::google::protobuf::Arena* arena) const {
  ComplexTestClass* n = new ComplexTestClass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComplexTestClass::Clear() {
// @@protoc_insertion_point(message_clear_start:tutorial.ComplexTestClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr10_.Clear();
  attr11_.Clear();
  attr13_.Clear();
  attr1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attr9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && attr12_ != NULL) {
    delete attr12_;
  }
  attr12_ = NULL;
  ::memset(&attr2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attr7_) -
      reinterpret_cast<char*>(&attr2_)) + sizeof(attr7_));
  _internal_metadata_.Clear();
}

bool ComplexTestClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tutorial.ComplexTestClass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes attr1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attr1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attr2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 attr3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 attr4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attr4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float attr5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attr5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double attr6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &attr6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool attr7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &attr7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attr8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attr8()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attr8().data(), static_cast<int>(this->attr8().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ComplexTestClass.attr8"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attr9 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attr9()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attr9().data(), static_cast<int>(this->attr9().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ComplexTestClass.attr9"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double attr10 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_attr10())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 82u, input, this->mutable_attr10())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attr11 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr11()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attr11(this->attr11_size() - 1).data(),
            static_cast<int>(this->attr11(this->attr11_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tutorial.ComplexTestClass.attr11"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tutorial.ComplexTestClass attr12 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attr12()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tutorial.ComplexTestClass attr13 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_attr13()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tutorial.ComplexTestClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tutorial.ComplexTestClass)
  return false;
#undef DO_
}

void ComplexTestClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tutorial.ComplexTestClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes attr1 = 1;
  if (this->attr1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->attr1(), output);
  }

  // int32 attr2 = 2;
  if (this->attr2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->attr2(), output);
  }

  // int32 attr3 = 3;
  if (this->attr3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attr3(), output);
  }

  // int64 attr4 = 4;
  if (this->attr4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->attr4(), output);
  }

  // float attr5 = 5;
  if (this->attr5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->attr5(), output);
  }

  // double attr6 = 6;
  if (this->attr6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->attr6(), output);
  }

  // bool attr7 = 7;
  if (this->attr7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->attr7(), output);
  }

  // string attr8 = 8;
  if (this->attr8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr8().data(), static_cast<int>(this->attr8().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->attr8(), output);
  }

  // string attr9 = 9;
  if (this->attr9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr9().data(), static_cast<int>(this->attr9().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->attr9(), output);
  }

  // repeated double attr10 = 10;
  if (this->attr10_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _attr10_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->attr10().data(), this->attr10_size(), output);
  }

  // repeated string attr11 = 11;
  for (int i = 0, n = this->attr11_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr11(i).data(), static_cast<int>(this->attr11(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr11");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->attr11(i), output);
  }

  // .tutorial.ComplexTestClass attr12 = 12;
  if (this->has_attr12()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->attr12_, output);
  }

  // repeated .tutorial.ComplexTestClass attr13 = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr13_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->attr13(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tutorial.ComplexTestClass)
}

::google::protobuf::uint8* ComplexTestClass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tutorial.ComplexTestClass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes attr1 = 1;
  if (this->attr1().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->attr1(), target);
  }

  // int32 attr2 = 2;
  if (this->attr2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->attr2(), target);
  }

  // int32 attr3 = 3;
  if (this->attr3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attr3(), target);
  }

  // int64 attr4 = 4;
  if (this->attr4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->attr4(), target);
  }

  // float attr5 = 5;
  if (this->attr5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->attr5(), target);
  }

  // double attr6 = 6;
  if (this->attr6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->attr6(), target);
  }

  // bool attr7 = 7;
  if (this->attr7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->attr7(), target);
  }

  // string attr8 = 8;
  if (this->attr8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr8().data(), static_cast<int>(this->attr8().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->attr8(), target);
  }

  // string attr9 = 9;
  if (this->attr9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr9().data(), static_cast<int>(this->attr9().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->attr9(), target);
  }

  // repeated double attr10 = 10;
  if (this->attr10_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _attr10_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->attr10_, target);
  }

  // repeated string attr11 = 11;
  for (int i = 0, n = this->attr11_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attr11(i).data(), static_cast<int>(this->attr11(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tutorial.ComplexTestClass.attr11");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(11, this->attr11(i), target);
  }

  // .tutorial.ComplexTestClass attr12 = 12;
  if (this->has_attr12()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *this->attr12_, deterministic, target);
  }

  // repeated .tutorial.ComplexTestClass attr13 = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attr13_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->attr13(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tutorial.ComplexTestClass)
  return target;
}

size_t ComplexTestClass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tutorial.ComplexTestClass)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double attr10 = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->attr10_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _attr10_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string attr11 = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attr11_size());
  for (int i = 0, n = this->attr11_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr11(i));
  }

  // repeated .tutorial.ComplexTestClass attr13 = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->attr13_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attr13(static_cast<int>(i)));
    }
  }

  // bytes attr1 = 1;
  if (this->attr1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attr1());
  }

  // string attr8 = 8;
  if (this->attr8().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attr8());
  }

  // string attr9 = 9;
  if (this->attr9().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attr9());
  }

  // .tutorial.ComplexTestClass attr12 = 12;
  if (this->has_attr12()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->attr12_);
  }

  // int32 attr2 = 2;
  if (this->attr2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attr2());
  }

  // int32 attr3 = 3;
  if (this->attr3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attr3());
  }

  // int64 attr4 = 4;
  if (this->attr4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->attr4());
  }

  // double attr6 = 6;
  if (this->attr6() != 0) {
    total_size += 1 + 8;
  }

  // float attr5 = 5;
  if (this->attr5() != 0) {
    total_size += 1 + 4;
  }

  // bool attr7 = 7;
  if (this->attr7() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComplexTestClass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tutorial.ComplexTestClass)
  GOOGLE_DCHECK_NE(&from, this);
  const ComplexTestClass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComplexTestClass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tutorial.ComplexTestClass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tutorial.ComplexTestClass)
    MergeFrom(*source);
  }
}

void ComplexTestClass::MergeFrom(const ComplexTestClass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tutorial.ComplexTestClass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr10_.MergeFrom(from.attr10_);
  attr11_.MergeFrom(from.attr11_);
  attr13_.MergeFrom(from.attr13_);
  if (from.attr1().size() > 0) {

    attr1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr1_);
  }
  if (from.attr8().size() > 0) {

    attr8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr8_);
  }
  if (from.attr9().size() > 0) {

    attr9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attr9_);
  }
  if (from.has_attr12()) {
    mutable_attr12()->::tutorial::ComplexTestClass::MergeFrom(from.attr12());
  }
  if (from.attr2() != 0) {
    set_attr2(from.attr2());
  }
  if (from.attr3() != 0) {
    set_attr3(from.attr3());
  }
  if (from.attr4() != 0) {
    set_attr4(from.attr4());
  }
  if (from.attr6() != 0) {
    set_attr6(from.attr6());
  }
  if (from.attr5() != 0) {
    set_attr5(from.attr5());
  }
  if (from.attr7() != 0) {
    set_attr7(from.attr7());
  }
}

void ComplexTestClass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tutorial.ComplexTestClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComplexTestClass::CopyFrom(const ComplexTestClass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tutorial.ComplexTestClass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComplexTestClass::IsInitialized() const {
  return true;
}

void ComplexTestClass::Swap(ComplexTestClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComplexTestClass::InternalSwap(ComplexTestClass* other) {
  using std::swap;
  attr10_.InternalSwap(&other->attr10_);
  attr11_.InternalSwap(&other->attr11_);
  attr13_.InternalSwap(&other->attr13_);
  attr1_.Swap(&other->attr1_);
  attr8_.Swap(&other->attr8_);
  attr9_.Swap(&other->attr9_);
  swap(attr12_, other->attr12_);
  swap(attr2_, other->attr2_);
  swap(attr3_, other->attr3_);
  swap(attr4_, other->attr4_);
  swap(attr6_, other->attr6_);
  swap(attr5_, other->attr5_);
  swap(attr7_, other->attr7_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComplexTestClass::GetMetadata() const {
  protobuf_ProtoComplexTestClass_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoComplexTestClass_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tutorial

// @@protoc_insertion_point(global_scope)
